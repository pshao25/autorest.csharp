// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;
using Azure.Core;

namespace Models.Visibility.Automatic.Models
{
    public partial class VisibilityModel : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("queryProp"u8);
            writer.WriteStringValue(QueryProp);
            writer.WritePropertyName("createProp"u8);
            writer.WriteStringValue(CreateProp);
            writer.WritePropertyName("updateProp"u8);
            writer.WriteStringValue(UpdateProp);
            writer.WritePropertyName("deleteProp"u8);
            writer.WriteStringValue(DeleteProp);
            writer.WritePropertyName("otherProp"u8);
            writer.WriteStringValue(OtherProp);
            writer.WriteEndObject();
        }

        internal static VisibilityModel DeserializeVisibilityModel(JsonElement element)
        {
            string readProp = default;
            string queryProp = default;
            string createProp = default;
            string updateProp = default;
            string deleteProp = default;
            string otherProp = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("readProp"u8))
                {
                    readProp = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("queryProp"u8))
                {
                    queryProp = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("createProp"u8))
                {
                    createProp = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("updateProp"u8))
                {
                    updateProp = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deleteProp"u8))
                {
                    deleteProp = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("otherProp"u8))
                {
                    otherProp = property.Value.GetString();
                    continue;
                }
            }
            return new VisibilityModel(readProp, queryProp, createProp, updateProp, deleteProp, otherProp);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static VisibilityModel FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeVisibilityModel(document.RootElement);
        }

        /// <summary> Convert into a Utf8JsonRequestContent. </summary>
        internal virtual RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }
    }
}
