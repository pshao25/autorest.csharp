// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.Security.ConfidentialLedger
{
    public partial class LedgerUser : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("userId");
            writer.WriteStringValue(UserId);
            writer.WritePropertyName("assignedRole");
            writer.WriteStringValue(AssignedRole.ToString());
            writer.WriteEndObject();
        }

        internal static LedgerUser DeserializeLedgerUser(JsonElement element)
        {
            string userId = default;
            LedgerUserRole assignedRole = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("userId"))
                {
                    userId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("assignedRole"))
                {
                    assignedRole = new LedgerUserRole(property.Value.GetString());
                    continue;
                }
            }
            return new LedgerUser(userId, assignedRole);
        }

        internal RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }

        internal static LedgerUser FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeLedgerUser(document.RootElement);
        }
    }
}
